name:                   accelerate-llvm
version:                0.15.0.0
cabal-version:          >= 1.10
tested-with:            GHC == 7.6.*
build-type:             Simple

synopsis:               Accelerate backend generating LLVM
description:
    This library implements a backend for the /Accelerate/ language which
    generates LLVM-IR, targeting both CUDA capable GPUs and multicore CPUs. For
    further information, refer to the main /Accelerate/ package:
    <http://hackage.haskell.org/package/accelerate>

-- license:
license-file:           LICENSE
author:                 Trevor L. McDonell
maintainer:             Trevor L. McDonell <tmcdonell@nvidia.com>
bug-reports:            https://github.com/AccelerateHS/accelerate/issues
category:               Compilers/Interpreters, Concurrency, Data, Parallelism

extra-source-files:     include/accelerate.h


-- Configuration flags
-- -------------------

Flag debug
  Default:              False
  Description:
    Enable tracing message flags. These are read from the command-line
    arguments, which is convenient but may cause problems interacting with the
    user program, so is not enabled by default. The available options:
    .

Flag bounds-checks
  Default:              True
  Description:          Enable bounds checking

Flag unsafe-checks
  Default:              False
  Description:          Enable bounds checking in unsafe operations

Flag internal-checks
  Default:              False
  Description:          Enable internal consistency checks


-- Build configuration
-- -------------------

Library
  exposed-modules:
    Data.Array.Accelerate.LLVM.CodeGen
    Data.Array.Accelerate.LLVM.CodeGen.Base
    Data.Array.Accelerate.LLVM.CodeGen.CUDA
    Data.Array.Accelerate.LLVM.CodeGen.Monad
    Data.Array.Accelerate.LLVM.CodeGen.Type

  other-modules:

  build-depends:
    base                        >= 4.6 && <4.7,
    accelerate                  == 0.15.*,
    containers                  >= 0.5 && <0.6,
    llvm-general,
    llvm-general-pure,
    mtl

  default-language:     Haskell2010

  include-dirs:         include
  ghc-options:          -O2 -Wall -fwarn-tabs

  if flag(debug)
    cpp-options:        -DACCELERATE_DEBUG

  if flag(bounds-checks)
    cpp-options:        -DACCELERATE_BOUNDS_CHECKS

  if flag(unsafe-checks)
    cpp-options:        -DACCELERATE_UNSAFE_CHECKS

  if flag(internal-checks)
    cpp-options:        -DACCELERATE_INTERNAL_CHECKS


Test-Suite test-exp
  Type:                 exitcode-stdio-1.0
  ghc-options:          -O2 -Wall -fwarn-tabs

  build-depends:
    base                        >= 4.6 && <4.7,
    accelerate                  == 0.15.*,
    accelerate-llvm,
    containers,
    llvm-general,
    llvm-general-pure,
    mtl

  default-language:     Haskell2010
  Main-is:              Exp.hs
  hs-source-dirs:       test


source-repository head
  type:                 git
  location:

-- vim: nospell
